var electronConnect = require('electron-connect');

var TARGET = {
    main: 'electron-main',
    renderer: 'electron-renderer'
};
var AVAILABLE_TARGETS = [TARGET.main,TARGET.renderer];
function createElectronReloadWebpackPlugin(options) {
    if ( options === void 0 ) options = {};

    var server = null;
    function restartOrReloadServer(targetType, server) {
        if (targetType === TARGET.main) {
            server.restart();
        } else {
            server.reload();
        }
    }
    
    function applyCompiler(userTargetType) {
        return {
            apply: function apply(compiler) {
                var configTarget = AVAILABLE_TARGETS.find(function (target) { return target === compiler.options.target; });
                var targetType = userTargetType || configTarget || TARGET.main;
                compiler.hooks.done.tap('ElectronReloadWebpackPlugin', function () {
                    if (!server) {
                        server = electronConnect.server.create(options);
                        server.start();
                    } else {
                        restartOrReloadServer(targetType, server);
                    }
                });
            }
        };
    }
    
    return function (target) {
        if (target && !AVAILABLE_TARGETS.includes(target)) {
            console.log(("\nElectronReloadWebpackPlugin: Specified target should be one of \"" + (AVAILABLE_TARGETS.join(' | ')) + "\". You passed \"" + target + "\""));
            console.log(("ElectronReloadWebpackPlugin: Using default target \"" + (TARGET.main) + "\""));
            return applyCompiler(TARGET.main);
        } else {
            return applyCompiler();
        }
    };
}

module.exports = createElectronReloadWebpackPlugin;
//# sourceMappingURL=index.js.map
